<%= form_for(CustomCommand.new) do |cc| %>
<%= cc.label :name %>
<%= cc.text_field :name %>
<br>
<br>
<%= cc.label :command %>
<%= cc.text_field :command %>
<br>
<%= hidden_field_tag :environment_id, @id  %>
<br>
<div id="add_params">
    <a href="javascript:void(0)" id="addmoreadditional" class="text-center"><i class="fa fa-plus" aria-hidden="true"></i> Add Parameters</a>
    <div class="input_fields_wrap_additional">
    </div>
</div>
<%= cc.submit 'Submit', :class => 'btn btn-primary' %>
<br>
<% end %>

<br>
<br>
<% if @custom.present? %>
<h3>Existing Commands</h3>
<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Command</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        <% @custom.map do |custom| %>
        <tr>
            <td><%= custom["name"] %></td>
            <td><%= custom["command"] %></td>
            <td><span class='btn btn-primary btn-command-edit' data-custom-command='<%= custom.to_json %>'>Edit</span></td>
        </tr>
        <% end %>
    </tbody>
</table>
<% end %>

<script>
    function isEmpty(value) {
        return (
            value === undefined ||
            value === null ||
            value === "" ||
            value === "<div></div>" ||
            (typeof value === "object" && Object.keys(value).length === 0) ||
            (typeof value === "string" && value.trim().length === 0)
        );
    }
    $(document).ready(function() {
        $(".btn-command-edit").on('click', function() {
            var command = $(this).data("customCommand");
            var id = command.id;
            var formHtml = "";
            formHtml += `<div class="form-group row">
    <label
      for="name"
      class="col-md-4 col-form-label text-md-right"
      >Name</label
    >
    <div class="col-md-6">
      <input
        type="text"
        id="name"
        class="form-control"
        value='${command.name}'
        name="name"
        required="true"
      />
    </div>
  </div>`;

            formHtml += `<div class="form-group row">
    <label
      for="command"
      class="col-md-4 col-form-label text-md-right"
      >Command</label
    >
    <div class="col-md-6">
      <input
        type="text"
        id="command"
        value='${command.command}'
        class="form-control"
        name="command"
        required="true"
      />
    </div>
  </div>`;

            formHtml += `<div class="form-group row">
    <label
      for="name"
      class="col-md-4 col-form-label text-md-right"
      >Parameters</label
    >
    <div class="col-md-6">
      <input
        type="text"
        id="parameters"
        value='${command.parameters}'
        class="form-control"
        name="parameters"
        required="true"
      />
    </div>
  </div>`;

            formHtml += `<div class="col-md-6 offset-md-4" style="display: flex; justify-content: center; width: 100%; margin-top:5px;">
                <button type="submit" id="btnUpdateCommand" class="btn btn-primary md-5">
                    Save
                </button>
            </div>`;

            var dialogID = $().showHtmlDialog(
                "Edit Command",
                formHtml, () => {}
            );

            $("#btnUpdateCommand").on("click", function() {
                var name = $("#name").val();
                if (isEmpty(name)) {
                    $().showMessage("Error", "Please add a name first!");
                    return;
                }

                var command = $("#command").val();
                if (isEmpty(command)) {
                    $().showMessage("Error", "Please add a command first!");
                    return;
                }

                var parameters = $("#parameters").val();
                if (isEmpty(parameters)) {
                    $().showMessage("Error", "Please add a parameters first!");
                    return;
                }

                var failureAction = (message) => {
                    message = (message === '') ?
                        `Failed to update the custom command.` :
                        message;
                    $().showMessage("Error", message);
                    return;
                };

                var successAction = (result) => {
                    $().hideHtmlDialog(dialogID);
                    alert("Custom command updated!")
                    window.location.reload(false);
                    return;
                };

                $().makeHttpRequest(
                    `${window.location.origin}/update_custom_command`,
                    "POST", {
                        custom_command: {
                            id: id,
                            name: name,
                            command: command,
                            parameters: parameters
                        },
                    },
                    successAction,
                    failureAction
                );
            });
        });
    });

    jQuery(document).ready(function() {
        var max_fields = 40;
        var wrapper = jQuery(".input_fields_wrap_additional");
        var x = 1;
        jQuery("#addmoreadditional").click(function(e) {
            e.preventDefault();
            if (x < max_fields) {
                var name1 = "parameters[]";
                var name2 = "additionalkeys[]";
                var divviid = "additionaldiv" + x;
                var placeholdertext = "additional field " + x;
                jQuery(wrapper).append("<div id='" + divviid + "' class='form-group'><div class='row'><div class='col-md-3'><div class='col-md-10'><input type='text' name='" + name1 + "' class='form-control' placeholder='Parameter Value' value=''  ></div></div></div><button class='btn-danger remove_field' id='remove-additionaldiv" + x + "' onclick='removeobstr(this.id)' type='button' title='Remove'><i class='fa fa-minus-circle'></i></button></div>"); //add input box
                x++;
            }
        });

    });
</script>