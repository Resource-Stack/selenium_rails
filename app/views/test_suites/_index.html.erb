<div class="modal fade" id="cases" title="My modal">
    <div class="modal-header">
    </div>
    <div class="modal-body">
        <button aria-hidden="true" class="close" id="health-modal-close" type="button">Ã—</button>
        <div id="health-modal">
        </div>
    </div>
    <div class="modal-footer">
    </div>
</div>

<%= link_to "Import Suite", "/import_suite", class: "btn btn-primary", id: "import" %>
<%= link_to 'Download', export_results_path(format: :csv), class: "btn btn-primary"%>

<%= form_tag("/test_suite_main", :method => "post") do %>
<%= hidden_field_tag "project_id", project_id %>
<%= hidden_field_tag "environment_id", environment_id %>
<div id="status_select" style="padding: 10px;">
    <%= select_tag :status, options_for_select( ["", "Draft", "Final"], selected: params[:status])%>
    <%= submit_tag("Filter", class: "btn btn-primary btn-sm") %>
</div>
<div id="test_suites">
    <input name="authenticity_token" value="<%= form_authenticity_token %>" type="hidden">
    <table id="suite-table-dude">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>

        <tbody>
            <% test_suites.each do |ts| %>
            <tr>
                <td><%= ts.id %></td>
                <div class="link">
                    <td><%= link_to "#{ts.name}", edit_test_suite_path(ts.id), {:remote => true, 'data-toggle' =>  "modal", 'data-target' => '#modal-window'}%> <%#= link_to "#{ts.name}", {controller: "test_suites", action: "edit", id: ts.id }, class: "btn btn-default btn-sm", target: :_blank %></td>
                </div>

                <td><%= ts.description %></td> 
                <td><%= ts.status%></td>
                <td class="button-cell">
                    <%= link_to "Cases", {controller: "test_suites", action: "test_cases", id: ts.id }, class: "btn btn-default btn-sm", target: :_blank%>

                    <% if Scheduler.where(test_suite_id: ts.id).pluck(:status).include?('READY') %>

                    <%= link_to "Scheduled", {controller: "test_suites", action: "tests_ran", id: ts.id }, class: "btn btn-default btn-sm", "data-toggle" => "modal", "data-target" => "#cases", remote: true %>
                    <%= link_to "Unschedule", {controller: "test_suites", action: "unschedule", id: ts.id }, class: "btn btn-primary btn-sm btn-unschedule" %>
                    <% else %>
                    <%= link_to "Past Run Status", {controller: "test_suites", action: "tests_ran", id: ts.id }, class: "btn btn-default btn-sm", "data-toggle" => "modal", "data-target" => "#cases", remote: true %>
                    <button class="btn btn-primary btn-sm btn-schedule-now" data-id="<%=ts.id%>" data-name="<%= ts.name %>">Schedule Now</button>
                    <% end %>
                    <%= hidden_field_tag :id, ts.id  %>
                    <%= link_to 'Destroy', {controller: "test_suites", action: "destroy", id: ts.id }, method: "delete", class: "btn btn-default btn-sm" %>
                    <% if ts.status == "Final" %>
                    <button class="btn btn-danger btn-sm btn-schedule-later" data-id="<%=ts.id%>" data-name="<%= ts.name %>">Periodic Schedule</button>

                    <% end %>
                </td>
            </tr>
            <% end %>
        </tbody>
    </table>
</div>
<% end %>



<div id="modal-window" class="modal fade" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content"></div>
        
    </div>
</div>
</div>

<div id="cases" class="modal fade" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content"></div>
    </div>
</div>
</div>


<script>

var table = null;

function loadBrowsers(){

        var response_array = [];
        $.ajax({
          type: "GET", 
          url: "/display_browser",
          async: false,
          success: function(data){
            response_array = data.complete_result
          }
        }); 
        return response_array
}

function getApiUrl(partialUrl) {
        return `${window.location.origin}/${partialUrl}`;
    }

    function getFormattedDate(date) {
        if (date == null) {
            return "";
        }
        return new Date(date).toISOString().split("T")[0];
    }


function initializeDataTable(tableID, suiteID) {
    var processing = false;
    var serverSide = true;
    var paging = true;
    var ordering = false;
    var info = true;
    var searchable = true;
    var searchDelay = 1000;
    var lengthMenu = [5, 10, 20];
    var pagingType = "full_numbers";
    if (table != null) {
        $(tableID).DataTable({ destroy: true });
        table.destroy();
    }
    table = $(tableID).DataTable({
        "destroy": true,
        "processing": processing,
        "serverSide": serverSide,
        "searching": searchable,
        "paging": paging,
        "lengthMenu": lengthMenu,
        "ordering": ordering,
        "pagingType": pagingType,
        "info": info,
        "searchDelay": searchDelay,
        "ajax": {
            "url": getApiUrl(`./suite_schedule/get_suite_schedules?suite_id=${suiteID}`),
            "type": "POST"
        },
        "language": {
            "info": "Showing from _START_ till _END_ from the total of _TOTAL_ records."
        },
        "columns": [
            { "data": "id" },
            { "data": "name" },
            {
                "data": "start_date", "render": function (data, type, row) {
                    return getFormattedDate(data);
                }
            },
            {
                "data": "end_date", "render": function (data, type, row) {
                    return getFormattedDate(data);
                }
            },
            { "data": "time" },
            {
                "defaultContent": `<div>
                            <a href='#' class='edit-item'>Edit</a>
                            <a href='#' class='delete-item'>Delete</a>
                        </div>`}
        ]
    });

    
    
    $(`${tableID} tbody`).on('click', '.edit-item', function (e) {
        e.preventDefault();
        var data = table.row($(this).parents('tr')).data();
        $(this).parents('tr').addClass("selected");
        showScheduleForm(data);
    });

    $(`${tableID} tbody`).on('click', '.delete-item', function (e) {
        e.preventDefault();
        var data = table.row($(this).parents('tr')).data();
        $(this).parents('tr').addClass("selected");

        var removeSelectionAction = () => {
            var item = $(tableID).find(".selected");
            if (item) {
                item.removeClass("selected");
            }
        };
        $().showConfirmationDialog("Delete Schedule", "Are you sure you want to delete this schedule?",
            () => {
                deleteItem(data.id);
            },
            () => {
                removeSelectionAction();
            },
            () => {
                removeSelectionAction();
            });
    });

    function deleteItem(id) {
        $().makeHttpRequest(getApiUrl("./suite_schedule/delete_suite_schedule?id=" + id), "GET", null, (res) => {
            var item = $(tableID).find(".selected");
            $(tableID).dataTable().api().row(item).remove().draw();

            if (item) {
                item.removeClass("selected");
            }
        });
    }


    function showScheduleForm(data) {
            var model = getDefaultSchedule(suiteID);
            var minDate = model.start_date;
            var browser_list = loadBrowsers();
            if (data != null) {
                Object.assign(model, data);
            }
            model.start_date = getFormattedDate(model.start_date);
            model.end_date = getFormattedDate(model.end_date);

            var forUpdate = model.id > 0;
            var formHtml = `<form id="scheduleForm" style="min-height:415px;">
            <div class="form-group" style="display: none;">
                <label for="id" class="col-md-4 col-form-label text-md-right left-align">Schedule
                ID</label>
                <div >
                    <input type="text" id="id" class="form-control" name="id"
                        value="${model.id}" />
                </div>
            </div>
            <div class="form-group">
                <label for="name" class="col-md-4 col-form-label text-md-right left-align left-label">Schedule
                    Name</label>
                <div >
                    <input type="text" id="name" class="form-control" name="name" required="true"
                          value="${model.name}" />
                </div>
            </div>
          
            <div class="form-group">
                <label for="start_date" class="col-md-4 col-form-label text-md-right left-align left-label" >Start
                    Date</label>
                <div >
                    <input type="date" id="start_date" class="form-control" name="start_date" min="${minDate}" value="${model.start_date
                }" required="true" />
                </div>
            </div>

            <div class="form-group">
            <label for="end_date" class="col-md-4 col-form-label text-md-right left-align left-label">End
                Date</label>
            <div >
                <input type="date" id="end_date" class="form-control" name="end_date" min="${minDate}" value="${model.end_date
                }" required="true"  />
            </div>
        </div>
          
            <div class="form-group">
                <label for="time" class="col-md-4 col-form-label text-md-right left-align left-label">Time</label>
                <div >
                <input type="time" id="time" class="form-control" name="time" value="${model.time
                }"  required="true"/>
                </div>
            </div>
            console.log(suiteID)`
            
            formHtml+= '<div style="display: flex; justify-content: space-between;">';
            for (var i = browser_list.length - 1; i >= 0; i--) {
                current_value = browser_list[i].id
                current_text = browser_list[i].name
                formHtml+=`<div class="form-check" id="multiple_browser_selection ${current_value}"><input type="checkbox" id=${current_value} class="form-check-input multiple_browser" name="browser" value="${current_value}" />`
                formHtml+=`<label for=${current_value} class="form-check-label">${current_text}</label></div>`
            }

            formHtml+='</div>';

            formHtml+=`<div class="col-md-6 offset-md-4" style="display: flex; justify-content: center; width: 100%; margin-top:5px;">
                <button type="submit" class="btn btn-primary md-5">
                    Save
                </button>
            </div>
          </form>`;

            var dialogID = $().showHtmlDialog(
                forUpdate ? "Update Schedule" : "Create new Schedule",
                formHtml, () => {
                    var item = $(tableID).find(".selected");
                    if (item) {
                        item.removeClass("selected");
                    }
                }
            );

            $("#scheduleForm").submit(function (e) {
                e.preventDefault();
                var form = $(this);

                var dataToSave = $().getFormData(form, getDefaultSchedule(suiteID));

                //bad code 
                var all_browser_checkboxes = document.getElementsByClassName('multiple_browser');
                var checkboxesChecked = [];
                for (var i = all_browser_checkboxes.length - 1; i >= 0; i--) {
                    current_browser = all_browser_checkboxes[i]
                    if (current_browser.checked){
                        checkboxesChecked.push(current_browser.value)
                    }
                }
                browserID = checkboxesChecked
                //

                createNewSchedule(suiteID, dataToSave, dialogID, false, browserID);
            });
        }

        $("#btnAddNew").off().on('click', function () {
            console.log("Here")
            showScheduleForm(null);
        });
    }

    function getFormattedTime(curDate) {
        curDate.setMilliseconds(Math.round(curDate.getMilliseconds() / 1000) * 1000);
        curDate.setSeconds(Math.round(curDate.getSeconds() / 60) * 60);
        curDate.setMinutes(Math.round(curDate.getMinutes() / 15) * 15);
        return curDate.toTimeString().substring(0, 5);
    }

    function getDefaultSchedule(suiteID) {
    var curTime = getFormattedTime(new Date());

    var tomorrowDate = new Date();
    tomorrowDate.setDate(tomorrowDate.getDate() + 1)
    return {
        id: -1,
        name: `Run suite at ${curTime}`,
        start_date: new Date().toISOString().split("T")[0],
        end_date: tomorrowDate.toISOString().split("T")[0],
        time: curTime,
        test_suite_id: suiteID,
        number_of_times: 1
        };
    }


    function createNewSchedule(suiteID, data = null, dialogID = null, scheduleImmediately = false, browserID) {
        var dataToSave = getDefaultSchedule(suiteID);
        var forUpdate = false;
        if (data != null) {
            Object.assign(dataToSave, data, {browser: browserID});
        }
        forUpdate = dataToSave.id > 0;
        var tableID = "#scheduleTable";
        $().makeHttpRequest(getApiUrl(`./suite_schedule/${(forUpdate ? "update_suite_schedule" : "create_suite_schedule")}`), "POST", { suite_schedule: dataToSave, schedule_immediately: scheduleImmediately }, (data) => {
            if (forUpdate > 0) {
                var item = $(tableID).find(".selected");
                $(tableID).dataTable().fnUpdate(data, item.index(), undefined, false);

                if (item) {
                    item.removeClass("selected");
                }
                $().showMessage("Success", "Schedule updated!");
            }
            else {
                $().showMessage("Success", "Schedule created!");
                $(tableID).dataTable().api().row.add(data).draw();
            }
            if (dialogID != null) {
                $().hideHtmlDialog(dialogID);
            }
        }, (error) => {
            $().showMessage("Error", error);
            var item = $(tableID).find(".selected");
            if (item) {
                item.removeClass("selected");
            }
        });
    }

    $(document).ready(function() {
        $("#suite-table-dude").dataTable({
            "iDisplayLength": 50
        });
        setupScheduleEvents();

        
        $("#suite-table-dude").on('click', '.btn-schedule-now', function(e){
            
            //create a function that will get the browsers and attach them to a ID
            e.preventDefault();
            var suiteID = $(this).data("id");
            var suiteName = $(this).data("name");
            var browser_list = loadBrowsers();

            $.ajax({
              url: '/get_scheduled_suite',
              method: 'get',
              data: {suite_id: suiteID},
              success: function(result){
                if (result['suite_schedule'] == null || result['suite_schedule']['browser_id'] == null)
                  $('#single_schedule_browser_id').val('4')
                else
                  $('#single_schedule_browser_id').val(result['suite_schedule']['browser_id'])
              }
            })

            var formHtml = `<form id="scheduleSubmitForm" style="min-height:170px;">
            <div class="form-group">
                <label for="number_of_times" class="col-md-4 col-form-label text-md-right left-align left-label">Number of Times</label>
                <input type="text" id="number_of_times" class="form-control" name="number_of_times" required="true" value="1" />
            </div>`;

            formHtml+=`<div class ="form-group"> 
            <label class="col-md-4 col-form-label text-md-right left-align left-label">Browser</label>
            <select class="form-control" id="single_schedule_browser_id">`;

            for (var i = browser_list.length - 1; i >= 0; i--) {
                current_value = browser_list[i].id
                current_text = browser_list[i].name
                formHtml+=`<option value=${current_value}>${current_text}</option>`;
            }

            formHtml+=`</select> </div>`                

            formHtml+=`<div class="col-md-6 offset-md-4" style="display: flex; justify-content: center; width: 100%; margin-top:5px;"><button type="submit" class="btn btn-primary md-5">Schedule</button></div></form>`;

            var dialogID = $().showHtmlDialog("Create new Schedule",
                formHtml, () => {

                }
            );

            $("#scheduleSubmitForm").submit(function (e) {
                e.preventDefault();
                var form = $(this);

                var dataToSave = $().getFormData(form, getDefaultSchedule(suiteID));
                var number_of_times = Number.parseInt(dataToSave.number_of_times);
                if (number_of_times <= 0 || number_of_times > 100) {
                    alert("Total load test should be between 1 and 100");
                    return;
                }
                // bad code
                var browser_select = document.getElementById('single_schedule_browser_id');
                console.log("yea yea", browser_select)
                var browserID = browser_select.options[browser_select.selectedIndex].value;

                //
                createNewSchedule(suiteID, dataToSave, dialogID, true, browserID);
            });
        });
        


        $("#suite-table-dude").on('click', '.btn-schedule-later', function(e){
            e.preventDefault();
            var suiteID = $(this).data("id");
            var suiteName = $(this).data("name");
            var html = `<div>
                <div style="display:flex; justify-content: flex-end; padding: 5px;">
                    <button id="btnAddNew" class="btn btn-primary btn-sm">Add New</button>
                </div>
                <table id="scheduleTable" class="table table-bordered table-responsive table-hover stripe">
                    <thead>
                         <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th>Start Date </th>
                            <th>End Date</th>
                            <th>Time</th>
                            <th>Action</th>
                         </tr>
                    </thead>
                </table>
            </div>`;
            $().showHtmlDialog(
                suiteName,
                html,                
                firstTime = true
            );
            if (firstTime) {
                initializeDataTable("#scheduleTable", suiteID);
                firstTime = false;
            }
        });

    });
</script>